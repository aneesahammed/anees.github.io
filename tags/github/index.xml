<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub on ^^</title><link>https://aneesahammed.github.io/tags/github/</link><description>Recent content in GitHub on ^^</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 14 Apr 2021 23:00:00 +0000</lastBuildDate><atom:link href="https://aneesahammed.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>ðŸš€Hugo: Deploy with GitHub Actions</title><link>https://aneesahammed.github.io/posts/hugo-deploy-with-github-actions/</link><pubDate>Wed, 14 Apr 2021 23:00:00 +0000</pubDate><guid>https://aneesahammed.github.io/posts/hugo-deploy-with-github-actions/</guid><description>This post discusses how Hugo, a blazingly fast static site generator written in Golang, can be deployed with GitHub Actions to GitHub pages.
This blog which you are currently reading, is built using Hugo and is hosted on the Github pages.
Repository structure I&amp;rsquo;ve got a private repository just for the contents &amp;amp; another separate repository to hold the generated files (HTML/CSS).
Initially, I relied on the Hugo CLI to generate &amp;amp; serve the static page contents each time I create/edit posts.</description></item><item><title>DevOps at scale: GitHub</title><link>https://aneesahammed.github.io/posts/devops-practice-github/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://aneesahammed.github.io/posts/devops-practice-github/</guid><description>Here I&amp;rsquo;m going to document a few DevOps practices &amp;amp; a couple more personal recommendations, particularly related to the source control (Git/GitHub), which we follow.
I work as a Lead DevOps Engineer for one of the biggest financial enterprises, and SOC compliance is of paramount importance. Being SOC compliant and scaling by hundreds or more projects and engineers is nearly impossible without team-wide standard practices &amp;amp; policies.
TL;DR Have standard naming convention.</description></item><item><title>GitHub Auto Tagger</title><link>https://aneesahammed.github.io/posts/github-auto-tagger/</link><pubDate>Wed, 10 Apr 2019 23:00:00 +0000</pubDate><guid>https://aneesahammed.github.io/posts/github-auto-tagger/</guid><description>I keep track of all my development work using GitHub project boards.
It not only helps me to see where work is flowing, queued or stalled but also to make our work as visible and transparent as possible.
To simplify, automate &amp;amp; improve GitHub issue management workflow therefore to scratch my own itch, I made a simple GitHub Probot app autotagger. It automatically tags the GitHub Issues based on the matched pattern.</description></item></channel></rss>