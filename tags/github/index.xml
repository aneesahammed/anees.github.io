<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub on ^^</title><link>https://aneesahammed.github.io/tags/github/</link><description>Recent content in GitHub on ^^</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 14 Apr 2021 23:00:00 +0000</lastBuildDate><atom:link href="https://aneesahammed.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo: Deploy with GitHub Actions</title><link>https://aneesahammed.github.io/posts/hugo-deploy-with-github-actions/</link><pubDate>Wed, 14 Apr 2021 23:00:00 +0000</pubDate><guid>https://aneesahammed.github.io/posts/hugo-deploy-with-github-actions/</guid><description>This post discusses how Hugo, a blazingly fast static site generator written in Golang, can be deployed with GitHub Actions to GitHub pages.
This blog which you are currently reading, is built using Hugo and is hosted on the Github pages.
Repository structure I&amp;rsquo;ve got a private repository just for the contents &amp;amp; another separate repository to hold the generated files (HTML/CSS).
Initially, I relied on the Hugo CLI to generate &amp;amp; serve the static page contents each time I create/edit posts.</description></item><item><title>DevOps at scale: GitHub</title><link>https://aneesahammed.github.io/posts/devops-practice-github/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://aneesahammed.github.io/posts/devops-practice-github/</guid><description>Considering DevOps at scale, being SOC (Service Organization Control) 2 compliant and dealing with hundreds or more projects and engineers at the same time, it&amp;rsquo;s nearly impossible to impart &amp;ldquo;DevOps culture&amp;rdquo; without putting together team-wide standard practices &amp;amp; policies.
Below are the few DevOps onboarding practices/recommendations particularly related to Git/GitHub being followed while selecting a candidate application or service for DevOps onboarding.
Git Git, as Wikipedia says is a distributed version control system for tracking changes in source code during software development Most importantly adopting a consistent naming convention &amp;amp; repository structure across the organization is essential.</description></item><item><title>GitHub Auto Tagger</title><link>https://aneesahammed.github.io/posts/github-auto-tagger/</link><pubDate>Wed, 10 Apr 2019 23:00:00 +0000</pubDate><guid>https://aneesahammed.github.io/posts/github-auto-tagger/</guid><description>I keep track of all my development work using GitHub project boards.
It not only helps me to see where work is flowing, queued or stalled but also to make our work visible and transparent as possible.
To simplify, automate &amp;amp; improve GitHub issue management workflow therefore to scratch my own itch, I made a simple GitHub Probot app autotagger. It automatically tags the GitHub Issues based on the matched pattern.</description></item></channel></rss>